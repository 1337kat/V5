local notifications = {}
local center = (workspace.CurrentCamera.ViewportSize / 2)

local function hitmarker_update()
    for i = 1, #notifications do
        notifications[i].Position = Vector2.new(center.X, (center.Y + 150) + (i * 18))
    end
end

local function getRainbowColor(t)
    local r = math.abs(math.sin(t * math.pi * 2))
    local g = math.abs(math.sin((t + 1/3) * math.pi * 2))
    local b = math.abs(math.sin((t + 2/3) * math.pi * 2))
    return Color3.fromRGB(r * 255, g * 255, b * 255)
end

local function animateRainbowText(hitlog, name, distance, duration)
    local startTime = tick()
    local connection
    connection = game:GetService("RunService").RenderStepped:Connect(function()
        local elapsed = tick() - startTime
        hitlog.Text = " " .. name .. "  [" .. distance .. "] Studs "
        hitlog.Color = getRainbowColor(elapsed / duration)
        if elapsed >= duration then
            connection:Disconnect()
        end
    end)
end

-- IDK How this code works but it does...

local function hitmarker(Name, Distance, Duration)
    task.spawn(function()
        local hitlog = Drawing.new('Text')
        hitlog.Size = 25
        hitlog.Font = 2
        hitlog.Text = " " .. Name .. "  " .. Distance .. " Studs "
        hitlog.Visible = true
        hitlog.ZIndex = 3
        hitlog.Center = true
        hitlog.Outline = true

        table.insert(notifications, hitlog)
        hitmarker_update()
        animateRainbowText(hitlog, Name, Distance, Duration)
        wait(Duration)
        table.remove(notifications, table.find(notifications, hitlog))
        hitmarker_update()
        hitlog:Remove()
    end)
end

game:GetService("LogService").MessageOut:Connect(function(message)
    local Name = message:match("->([%w_]+)")
    local Dist = message:match("(%d+%.?%d*)s")
    if Name and Dist then
        hitmarker(Name, Dist, 4)
    end
end)
