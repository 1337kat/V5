local u1 = _G.NEXT
local v2 = _G.classes
local u3 = game:GetService("ReplicatedStorage")
local u4 = game:GetService("RunService")
game:GetService("UserInputService")
game:GetService("ContentProvider")
local u5 = v2.Character
local u6 = v2.UI
local u7 = v2.InventoryClient
local u8 = v2.EntityClient
local u9 = v2.NetClient
local u10 = v2.SendCodes
local u11 = v2.InputManager
local u12 = v2.ClassTypes
local u13 = v2.SharedFunctions
local u14 = v2.Camera
local _ = v2.VehicleClient
local u15 = v2.Preloader
local u16 = {}
local u17 = workspace.Const.Ignore.FPSArms
local u18 = nil
local u19 = {}
local u20 = false
function u1.lateinit() --[[Anonymous function at line 31]]
    --[[
    Upvalues:
        [1] = u16
        [2] = u15
        [3] = u17
    --]]
    u16 = u15.LoadPlayerAnimations(u17.AnimationController.Animator)
end
function u1.ItemAction(p21, ...) --[[Anonymous function at line 35]]
    --[[
    Upvalues:
        [1] = u18
    --]]
    if u18 then
        if not u18[p21] then
            error((("%* is not a member of %*"):format(p21, u18.type)))
        end
        u18[p21](u18, ...)
    end
end
function u1.SetSkinColor(p22) --[[Anonymous function at line 44]]
    --[[
    Upvalues:
        [1] = u17
    --]]
    u17.LeftHand.Color = p22
    u17.RightHand.Color = p22
    u17.LeftLowerArm.Color = p22
    u17.RightLowerArm.Color = p22
    u17.Fake.c_LeftLowerArm.Color = p22
    u17.Fake.c_RightLowerArm.Color = p22
end
local u23 = 0
function u1.EquipItem(p24, p25) --[[Anonymous function at line 56]]
    --[[
    Upvalues:
        [1] = u23
        [2] = u12
        [3] = u13
        [4] = u7
        [5] = u1
        [6] = u5
        [7] = u18
        [8] = u14
        [9] = u17
        [10] = u16
        [11] = u4
        [12] = u9
        [13] = u10
    --]]
    u23 = math.random(1, 10000000)
    local u26 = u12.ToClass(p24)
    u13.UpdateItemModifiers(u26)
    u7.GetInventoryItems()[p25] = u26
    u1.UnEquipItem()
    if u26.OnEquip and (not u5.IsSwimming() or u26.WaterProof) and not u5.GetPilotedVehicle() then
        u18 = u26
        u14.SetMaxLookExtents(u18.CameraAngleMin, u18.CameraAngleMax)
        u26:OnEquip(u17, u16, u26)
        local u27 = u26.Update
        if u27 then
            u4:BindToRenderStep("itemUpdate", Enum.RenderPriority.Last.Value, function(...) --[[Anonymous function at line 73]]
                --[[
                Upvalues:
                    [1] = u27
                    [2] = u26
                --]]
                u27(u26, ...)
            end)
        end
        u9.SendTCP(u10.INV_EQUIP_ITEM, p25, u23, u26.type)
    end
end
function u1.UnEquipItem(p28, p29) --[[Anonymous function at line 80]]
    --[[
    Upvalues:
        [1] = u18
        [2] = u23
        [3] = u14
        [4] = u6
        [5] = u20
        [6] = u4
        [7] = u9
        [8] = u10
    --]]
    if p29 and (u18 and u18.WaterProof) then
        return
    elseif not p28 or p28 == u23 then
        u14.SetMaxLookExtents(nil, nil)
        u6.CloseRadialMenu(true)
        u20 = false
        u4:UnbindFromRenderStep("itemUpdate")
        if u18 then
            if u18.OnUnequip then
                u18:OnUnequip()
                u18 = nil
            else
                error("item has no control module")
            end
        end
        if not p28 then
            u9.SendTCP(u10.INV_UNEQUIP_ITEM)
        end
    end
end
function u1.GetEquippedItem() --[[Anonymous function at line 105]]
    --[[
    Upvalues:
        [1] = u18
    --]]
    return u18
end
function u1.RadialBlocked(p30) --[[Anonymous function at line 109]]
    --[[
    Upvalues:
        [1] = u20
    --]]
    u20 = p30
end
function u1.IsItemUsable() --[[Anonymous function at line 113]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    if u5.IsGrounded() then
        return not u5.IsSprinting()
    else
        return false
    end
end
function u1.Use1(p31, p32) --[[Anonymous function at line 136]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u18
        [3] = u5
        [4] = u8
    --]]
    if u6.IsRadialMenuOpen() then
        u6.CloseRadialMenu(false)
    else
        local v33
        if u18 and u5.IsAlive() then
            v33 = (u6.GetShouldMouseLock() or not p31) and true or false
        else
            v33 = false
        end
        if v33 and u18.OnUse1 then
            u18:OnUse1(p31, p32)
        end
        if p31 then
            u8.SelectRadial()
        end
    end
end
function u1.Use2(p34, p35) --[[Anonymous function at line 150]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u11
        [3] = u18
        [4] = u5
    --]]
    if p34 or not u6.IsRadialMenuOpen() then
        local v36
        if u18 and u5.IsAlive() then
            v36 = (u6.GetShouldMouseLock() or not p34) and true or false
        else
            v36 = false
        end
        if v36 and u18.OnUse2 then
            u18:OnUse2(p34, p35)
        end
    else
        u6.CloseRadialMenu(u11.InputDevice ~= "Mobile")
    end
end
local function u38(p37) --[[Anonymous function at line 161]]
    --[[
    Upvalues:
        [1] = u18
    --]]
    u18:OnUse4(p37)
end
local u39 = false
local u40 = 0
function u1.Use3(p41, p42) --[[Anonymous function at line 168]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u11
        [3] = u18
        [4] = u5
        [5] = u39
        [6] = u40
    --]]
    if p41 or not u6.IsRadialMenuOpen() then
        local v43
        if u18 and u5.IsAlive() then
            v43 = (u6.GetShouldMouseLock() or not p41) and true or false
        else
            v43 = false
        end
        if v43 and u18.OnUse3 then
            u39 = p41
            if p41 then
                u40 = time()
            elseif time() - u40 < 0.2 then
                u18:OnUse3(p41, p42)
            end
        else
            return
        end
    else
        u6.CloseRadialMenu(u11.InputDevice ~= "Mobile")
        return
    end
end
local function v49() --[[Anonymous function at line 190]]
    --[[
    Upvalues:
        [1] = u39
        [2] = u18
        [3] = u5
        [4] = u6
        [5] = u40
        [6] = u38
    --]]
    if u39 then
        local v44
        if u18 and u5.IsAlive() then
            v44 = u6.GetShouldMouseLock() and true or false
        else
            v44 = false
        end
        if v44 and u18.OnUse3 then
            if time() - u40 > 0.2 then
                u39 = false
                local v45, v46 = u18:GetRadialMenu()
                if v45 then
                    if v46 then
                        u6.OpenRadialMenu(v45, "Interact Options", u38)
                        return
                    end
                    local v47 = {}
                    for _, v48 in v45 do
                        v47[#v47 + 1] = {
                            ["desc"] = v48,
                            ["sub"] = "",
                            ["image"] = v48
                        }
                    end
                    u6.OpenRadialMenu(v47, "Interact Options", u38)
                end
            end
        end
    else
        return
    end
end
u4.RenderStepped:Connect(v49)
local function u54(p50, p51) --[[Anonymous function at line 229]]
    p50:PivotTo(CFrame.new(0, 0, 0))
    local v52 = Vector3.new(1, p51, 1)
    for _, v53 in p50:GetDescendants() do
        if v53:IsA("BasePart") then
            v53.Size = v53.Size * v52
            v53.Position = v53.Position * (v52 * 0.5)
        end
    end
end
function u1.ApplyVMArmor(p55) --[[Anonymous function at line 242]]
    --[[
    Upvalues:
        [1] = u19
        [2] = u17
        [3] = u5
        [4] = u3
        [5] = u54
    --]]
    u19 = p55 or {}
    for _, v56 in u17.Armor:GetChildren() do
        local v57 = u19
        local v58 = v56.Name
        for _, v60 in v57 do
            if v60.type == v58 then
                goto l8
            end
        end
        local v60 = nil
        ::l8::
        if not v60 then
            v56:Destroy()
        end
    end
    for _, v72 in u19 do
        if v72.type == "ShoulderLight" then
            ::l15::
            if v72 and v72.on then
                workspace.Const.Ignore.HLPart.SpotLight.Enabled = true
            else
                workspace.Const.Ignore.HLPart.SpotLight.Enabled = false
            end
            for _, v63 in u19 do
                if v63.type == "Flippers" then
                    goto l24
                end
            end
            local v63 = nil
            ::l24::
            if v63 then
                u5.SetHasFlippers(true)
            else
                u5.SetHasFlippers(false)
            end
            for _, v65 in u19 do
                if v65.type == "Jetpack" then
                    goto l32
                end
            end
            local v65 = nil
            ::l32::
            if v65 then
                u5.SetHasJetpack(true)
            else
                u5.SetHasJetpack(false)
            end
            for _, v66 in u19 do
                local v67 = v66.type
                if not u17.Armor:FindFirstChild(v67) then
                    local v68 = Instance.new("Folder")
                    v68.Parent = u17.Armor
                    v68.Name = v67
                    for _, v69 in u3.ArmorModels[v67]:GetChildren() do
                        if u17:FindFirstChild(v69.Name) and (v69.Name ~= "Torso" and (v69.Name ~= "LeftUpperArm" and v69.Name ~= "RightUpperArm")) then
                            local v70 = v69:Clone()
                            v70.Parent = v68
                            local v71 = Instance.new("Weld")
                            v71.Part0 = v70.PrimaryPart
                            if v69.Name == "LeftLowerArm" then
                                v71.Part1 = u17.Fake.c_LeftLowerArm
                                u54(v70, 1.47)
                            elseif v69.Name == "RightLowerArm" then
                                v71.Part1 = u17.Fake.c_RightLowerArm
                                u54(v70, 1.47)
                            else
                                v71.Part1 = u17[v69.Name]
                            end
                            v71.Parent = v70
                        end
                    end
                end
            end
            return
        end
    end
    local v72 = nil
    goto l15
end
function u1.SpecialUse(p73) --[[Anonymous function at line 309]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u10
    --]]
    if p73 then
        u9.SendTCP(u10.SPECIAL_USE)
    end
end
u1.ViewModel = u17
return true
